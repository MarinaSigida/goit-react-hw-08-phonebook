{"version":3,"file":"static/js/950.88d13d7e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","redux/contacts/contactsSelectors.js","redux/filter/filterSelectors.js","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.jsx","webpack://react-homework-template/./src/components/ContactDataUpdateForm/ContactDataUpdateForm.module.css?d6ab","components/ContactDataUpdateForm/ContactDataUpdateForm.jsx","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/PhonebookPage/PhonebookPage.module.css?4961","pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Loader_overlay__vojGq\",\"ldsRoller\":\"Loader_ldsRoller__5cE1k\"};","import style from './Loader.module.css';\n\nexport function Loader() {\n  return (\n    <div className={style.overlay}>\n      <div className={style.ldsRoller}>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n}","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/filterSelectors';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","export const selectFilter = state => state.filter.value;","// extracted by mini-css-extract-plugin\nexport default {\"phonebook_form\":\"Phonebook_phonebook_form__PGEQf\",\"phonebook_label\":\"Phonebook_phonebook_label__jbjzb\",\"phonebook_input\":\"Phonebook_phonebook_input__7oBGp\",\"phonebook_submit_btn\":\"Phonebook_phonebook_submit_btn__ju3PU\"};","import { useState } from 'react';\nimport { VscAdd } from 'react-icons/vsc';\nimport { toast } from 'react-toastify';\n\nimport style from './Phonebook.module.css';\n\n\n\nexport const Phonebook = ({ onAddContact }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const state = {\n    name,\n    number,\n  };\n\n  const onInputChange = ({ target: { name: inputName, value } }) => {\n    switch (inputName) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        if(!/^[0-9\\s-+()]*$/.test(value)){\n            toast.error('Please enter only numbers, symbols and spaces!');\n            break;\n        } \n        setNumber(value);\n        break;\n      default:\n        return null;\n    }   \n  };\n\n  const onFormSubmitAddContact = e => {\n    e.preventDefault();\n    onAddContact(state);\n    onFormReset();\n  };\n\n  const onFormReset = () => {\n    setName(\"\");\n    setNumber(\"\");   \n  };\n\n  return (\n    <>\n      <form onSubmit={onFormSubmitAddContact} className={style.phonebook_form}>\n        <label className={style.phonebook_label}>\n          Name\n          <input\n            onChange={onInputChange}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            className={style.phonebook_input}            \n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter a name\"\n          />\n        </label>\n        <label className={style.phonebook_label}>\n          Number\n          <input\n            onChange={onInputChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            className={style.phonebook_input}\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter a number\"\n          />\n        </label>\n        <button type=\"submit\" className={style.phonebook_submit_btn}>\n          Add contact <VscAdd />\n        </button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_update_title\":\"ContactDataUpdateForm_contacts_update_title__QDyfY\",\"contacts_update_form\":\"ContactDataUpdateForm_contacts_update_form__1NHH8\",\"contacts_update_label\":\"ContactDataUpdateForm_contacts_update_label__tNyJC\",\"contacts_update_input\":\"ContactDataUpdateForm_contacts_update_input__pZeMe\",\"contacts_update_button\":\"ContactDataUpdateForm_contacts_update_button__NECPg\"};","import { toast } from 'react-toastify';\nimport { useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nimport { updateContact } from 'redux/contacts/contactsOperations';\nimport style from './ContactDataUpdateForm.module.css';\n\nexport const ContactDataUpdateForm = ({ onCloseModal, updateContactId }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatsh = useDispatch();\n  const userToUpdateArr = contacts.filter(\n    contact => contact.id === updateContactId\n  );\n  const { id, name: userName, number: userNumber } = userToUpdateArr[0];\n\n  const [name, setName] = useState(userName);\n  const [number, setNumber] = useState(userNumber);\n\n  const stateData = {\n    id,\n    name,\n    number,\n  };\n\n  const onInputChange = ({ target: { name: inputName, value } }) => {\n    switch (inputName) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        if (!/^[0-9\\s-+()]*$/.test(value)) {\n          toast.error('Please enter only numbers, symbols and spaces!');\n          break;\n        }\n        setNumber(value);\n        break;\n      default:\n        return null;\n    }\n  };\n\n  const onFormSubmitAddContact = e => {\n    e.preventDefault();\n    dispatsh(updateContact(stateData));\n    onCloseModal();\n    onFormReset();\n  };\n\n  const onFormReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <h2 className={style.contacts_update_title}>Update contacts</h2>\n      <form\n        onSubmit={onFormSubmitAddContact}\n        className={style.contacts_update_form}\n      >\n        <label className={style.contacts_update_label}>\n          Name\n          <input\n            onChange={onInputChange}\n            type=\"text\"\n            name=\"name\"\n            className={style.contacts_update_input}\n            value={name}\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter a name\"\n          />\n        </label>\n        <label className={style.contacts_update_label}>\n          Number\n          <input\n            onChange={onInputChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            className={style.contacts_update_input}\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter phone number\"\n          />\n        </label>\n        <button className={style.contacts_update_button}>Update</button>\n      </form>\n    </>\n  );\n};\n\nContactDataUpdateForm.propTypes = {\n  updateContactId: PropTypes.string.isRequired,\n  onCloseModal: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Modal_overlay__r63M6\",\"modal\":\"Modal_modal__DJDMv\"};","import { useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { ContactDataUpdateForm } from 'components/ContactDataUpdateForm/ContactDataUpdateForm';\nimport style from './Modal.module.css';\n\n\nexport const Modal = ({ onCloseModal, updateContactId }) => {\n  useEffect(() => {\n    const onEscClose = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n    window.addEventListener('keydown', onEscClose);\n    return () => {\n      window.removeEventListener('keydown', onEscClose);\n    };\n  }, [onCloseModal]);\n\n  const handleModal = e => {\n    if (e.currentTarget === e.target) {\n      onCloseModal();\n    }\n  };\n\n  return (\n    <>\n      <div className={style.overlay} onClick={handleModal}>\n        <div className={style.modal}>\n          <ContactDataUpdateForm\n            onCloseModal={onCloseModal}\n            updateContactId={updateContactId}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nModal.propTypes = {\n  updateContactId: PropTypes.string.isRequired,\n  onCloseModal: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"contact_list\":\"ContactList_contact_list__tnyRS\",\"contact_list_item\":\"ContactList_contact_list_item__Ts0bB\",\"contact_list_values\":\"ContactList_contact_list_values__WfBQI\",\"contact_list_btn_wrapper\":\"ContactList_contact_list_btn_wrapper__lBDDs\",\"contact_list_btn\":\"ContactList_contact_list_btn__VuGKn\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { VscTrash, VscEdit } from 'react-icons/vsc';\nimport {\n  selectContacts,\n  selectFilterContacts,\n} from 'redux/contacts/contactsSelectors';\nimport { useState } from 'react';\nimport { deleteContacts } from 'redux/contacts/contactsOperations';\nimport { Modal } from 'components/Modal/Modal';\nimport style from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [updateContactId, setUpdateContactId] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const filterContacts = useSelector(selectFilterContacts);\n\n  const onDeleteContact = id => {\n    dispatch(deleteContacts(id));\n  };\n\n  const onModalOpen = id => {\n    setIsModalOpen(true);\n    setUpdateContactId(id);\n  };\n\n  const onCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      {!contacts.length && <p>Your phonebook is empty</p>}\n      {filterContacts.length > 0 ? (\n        <ul className={style.contact_list}>\n          {filterContacts.map(({ id, name, number }) => (\n            <li className={style.contact_list_item} key={id} data-id={id}>\n                <p className={style.contact_list_values}>\n                  {name}: {number}\n                </p>\n\n\n              <div className={style.contact_list_btn_wrapper}>\n                <button\n                  type=\"button\"\n                  name=\"updateBtn\"\n                  onClick={() => onModalOpen(id)}\n                  className={style.contact_list_btn}\n                >\n                  <VscEdit />\n                </button>\n                <button\n                  type=\"button\"\n                  name=\"deleteBtn\"\n                  onClick={() => onDeleteContact(id)}\n                  className={style.contact_list_btn}\n                >\n                  <VscTrash />\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        contacts.length > 0 && <p>Nothing found...</p>\n      )}\n      {isModalOpen && (\n        <Modal onCloseModal={onCloseModal} updateContactId={updateContactId} />\n      )}\n    </>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"Filter_search__G+v4u\",\"inputName\":\"Filter_inputName__snXo9\"};","import PropTypes from 'prop-types';\nimport style from './Filter.module.css';\n\n\nexport const Filter = ({ onChangeFilter }) => {\n  return (\n    <div>\n      <label className={style.search}>\n        Search\n        <input\n        onChange={e => onChangeFilter(e)}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\" \"\n        className={style.inputName}\n        title=\"Enter search name\"/>\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook_main\":\"PhonebookPage_phonebook_main__imL+a\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { toast } from 'react-toastify';\nimport {\n  selectContacts,\n  selectIsLoading,\n} from 'redux/contacts/contactsSelectors';\nimport { updateFilter } from 'redux/filter/filterSlice';\nimport { addContacts } from 'redux/contacts/contactsOperations';\n\nimport { Phonebook } from '../../components/Phonebook/Phonebook';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Loader } from '../../components/Loader/Loader';\nimport style from './PhonebookPage.module.css';\n\n\n\nconst PhonebookPage = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  const onAddContact = newUser => {\n    const uniqUserSearch = contacts.find(({ name }) => name === newUser.name);\n    uniqUserSearch\n      ? toast.info(`${uniqUserSearch.name} is already in Phonebook`)\n      : dispatch(addContacts(newUser));\n  };\n\n  const onChangeFilter = e => {\n    dispatch(updateFilter(e.target.value));\n  };\n  return (\n    <div className={style.phonebook_main}>\n        <Helmet>\n      <title>Phonebook</title>\n      </Helmet>\n        <Phonebook onAddContact={onAddContact} />\n        <Helmet>\n      <title>Contacts</title>\n      </Helmet>\n        <Filter onChangeFilter={onChangeFilter} />\n        <ContactList />\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default PhonebookPage;"],"names":["Loader","className","style","selectContacts","state","contacts","selectIsLoading","isLoading","selectFilterContacts","createSelector","filter","value","name","toLowerCase","includes","Phonebook","onAddContact","useState","setName","number","setNumber","onInputChange","target","inputName","test","toast","onFormReset","onSubmit","e","preventDefault","onChange","type","title","required","placeholder","ContactDataUpdateForm","onCloseModal","updateContactId","useSelector","dispatsh","useDispatch","contact","id","userName","userNumber","stateData","updateContact","Modal","useEffect","onEscClose","code","window","addEventListener","removeEventListener","onClick","currentTarget","ContactList","isModalOpen","setIsModalOpen","setUpdateContactId","dispatch","filterContacts","length","map","onModalOpen","deleteContacts","onDeleteContact","Filter","onChangeFilter","Helmet","newUser","uniqUserSearch","find","addContacts","updateFilter"],"sourceRoot":""}